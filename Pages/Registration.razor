@page "/registration"
@using mudblazorserver1.Data
@using System.ComponentModel.DataAnnotations

<PageTitle>Validate form</PageTitle>
<MudText Typo="Typo.h3" GutterBottom="true">Weather forecast</MudText>

<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
<DataAnnotationsValidator/>
<MudGrid>
    <MudItem xs="12" sm="7">
        <MudCard>
            <MudCardContent>
                <MudTextField Label="First name" HelperText="Max. 8 characters"
                              @bind-Value="model.Username" For="@(() => model.Username)"/>
                <MudTextField Label="Email" Class="mt-3"
                              @bind-Value="model.Email" For="@(() => model.Email)"/>
                <MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3"
                              @bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password"/>
                <MudTextField Label="Password" HelperText="Repeat the password" Class="mt-3"
                              @bind-Value="model.Password2" For="@(() => model.Password2)" InputType="InputType.Password"/>
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Register</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
    <MudItem xs="12" sm="5">
        <MudPaper Class="pa-4 mud-height-full">
            <MudText Typo="Typo.subtitle2">Validation Summary</MudText>
            @if (success)
            {
                <MudAlert Severity="Severity.Success">The reactor type is RBMK-1000</MudAlert>
            }
            else
            {
                <MudText Color="@Color.Error">
                    <ValidationSummary />
                </MudText>
            }
        </MudPaper>
    </MudItem>
    <MudItem xs="12">
        <MudText Typo="Typo.body2" Align="Align.Center">
            Fill out the form correctly to see the success message.
        </MudText>
    </MudItem>
</MudGrid>
</EditForm>


<MudTable Items="@registerAccountForm" MultiSelection="true" Hover>
    <HeaderContent>
        <MudTh>Username</MudTh>
        <MudTh>Email</MudTh>
        <MudTh>Password</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Sign">@context.Username</MudTd>
        <MudTd DataLabel="Name">@context.Email</MudTd>
        <MudTd DataLabel="Position">@context.Password</MudTd>
    </RowTemplate>
    @* <PagerContent>
        <MudTablePager PageSizeOptions="new int[]{50, 100}" />
    </PagerContent> *@
    @* <FooterContent>
        <MudTd colspan="5">Select All</MudTd>
    </FooterContent> *@
</MudTable>


@code {
    // TABLE

   

    // ========================================================================
    RegisterAccountForm model;
    List<RegisterAccountForm> registerAccountForm = new List<RegisterAccountForm>();
    bool success;

    public class RegisterAccountForm
    {
        [Required]
        [StringLength(8, ErrorMessage = "Name length can't be more than 8.")]
        public string Username { get; set; }

        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [Required]
        [StringLength(30, ErrorMessage = "Password must be at least 8 characters long.", MinimumLength = 8)]
        public string Password { get; set; }

        [Required]
        [Compare(nameof(Password))]
        public string Password2 { get; set; }

    }
    private void GetUserInfo()
    {
        
        if(success)
        {
            RegisterAccountForm model = new RegisterAccountForm();
            registerAccountForm.Add(model);
        }
    }

    private void OnValidSubmit(EditContext context)
    {
        success = true;
        StateHasChanged();
    }

}